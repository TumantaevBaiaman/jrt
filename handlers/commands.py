import aiohttp
from aiogram import types, Dispatcher
from aiogram.dispatcher.filters import Text

from bot import dp, bot
from key import buttons


async def start(message: types.Message):
    await bot.send_message(message.from_user.id, '–°–∞–ª–∞–º –º–µ–Ω —Å–∞–≥–∞ –ñ–†–¢–≥–∞ –¥–∞—è—Ä–¥–∞–Ω—É—É–≥–∞ –∂–∞—Ä–¥–∞–º –±–µ—Ä–µ–º', reply_markup=buttons.main_menu_m)


async def jrt_m(message: types.Message):
    await bot.send_message(message.from_user.id, '–ñ–†–¢ –±–æ–ª—É–º—É', reply_markup=buttons.main_menu)


async def math_m(message: types.Message):
    await bot.send_message(message.from_user.id, '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ –±–æ–ª—É–º—É', reply_markup=buttons.main_menu_math)


async def back_m(message: types.Message):
    await bot.send_message(message.from_user.id, '–ê—Ä—Ç–∫–∞', reply_markup=buttons.main_menu)


async def back_m2(message: types.Message):
    await bot.send_message(message.from_user.id, '–ê—Ä—Ç–∫–∞', reply_markup=buttons.main_menu_m)


def register_admin(dp : Dispatcher):
    dp.register_message_handler(start, commands=['start'])
    dp.register_message_handler(jrt_m, Text(equals='‚úîÔ∏è–ñ–†–¢', ignore_case=True))
    dp.register_message_handler(math_m, Text(equals='üßÆ –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞', ignore_case=True))
    dp.register_message_handler(back_m, Text(equals='‚óÄÔ∏è–ê—Ä—Ç–∫–∞', ignore_case=True))
    dp.register_message_handler(back_m2, Text(equals='‚¨ÖÔ∏è–ê—Ä—Ç–∫–∞', ignore_case=True))